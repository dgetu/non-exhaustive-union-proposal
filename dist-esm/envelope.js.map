{"version":3,"file":"envelope.js","sourceRoot":"","sources":["../src/envelope.ts"],"names":[],"mappings":";AAqCA,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;IACpB,CAAC,CAAC,SAAS,CAAC;AACd,CAAC;KAAM,IAAI,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC;IAC/B,CAAC,CAAC,aAAa,CAAC;AAClB,CAAC;KAAM,CAAC;IACN,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;IACpB,MAAM,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,oDAAoD;AAC/E,CAAC","sourcesContent":["type MediaRecord = InspectableUnknownEnvelope | AudioMetadataEnvelope | AudioDataEnvelope;\n\ninterface UnknownEnvelope {\n  kind: string;\n  isAudioData(): this is AudioDataEnvelope;\n  isAudioMetadata(): this is AudioMetadataEnvelope;\n}\n\ninterface AudioMetadataEnvelope extends UnknownEnvelope {\n  kind: \"AudioMetadata\";\n  AudioMetadata: AudioMetadata;\n}\n\ninterface AudioDataEnvelope extends UnknownEnvelope {\n  kind: \"AudioData\";\n  AudioData: AudioData;\n}\n\ntype InspectableUnknownEnvelope = UnknownEnvelope & Record<string, unknown>;\n\ninterface AudioMetadata {\n  subscriptionId: string;\n  sampleRate: number;\n  format: string;\n}\n\ninterface AudioData {\n  timestamp: Date;\n  participantRawId: string;\n  data: Uint8Array;\n  format: number;\n}\n\ninterface AudioUnknown extends Record<string, unknown> {}\n\ndeclare var x: MediaRecord;\n\nif (x.isAudioData()) {\n  x.AudioData;\n} else if (x.isAudioMetadata()) {\n  x.AudioMetadata;\n} else {\n  const kind = x.kind;\n  const payload = x[kind]; // only allowed when the other options are exhausted\n}\n"]}